---
- hosts: awx
  tasks:
  - apt_repository:
      repo: 'ppa:ansible/ansible'

  - apt_repository:
      # deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable

  - apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Install ansible, docker-ce, make, git, python-setuptools, python-pip, python3-pip
    apt:
      update_cache: yes
      name: "{{ item }}"
      state: present
    with_items:
      - 'ansible'
      - 'docker-ce'
      - 'make'
      - 'git'
      - 'python-setuptools'
      - 'python-pip'
      - 'python3-pip'

  - name: pip, docker
    pip:
        name: "{{ item }}"
    with_items:
      - 'pip'
      - 'docker'

  - name: awx git
    git:
      repo: https://github.com/ansible/awx.git
      dest: /root/awx
      clone: yes
      update: yes
      force: yes

  - name: awx-logos git
    git:
      repo: https://github.com/ansible/awx-logos.git
      dest: /root/awx-logos
      clone: yes
      update: yes
      force: yes

  - name:
    copy:
      dest: /root/awx/installer/inventory
      content: |
        localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python"

        [all:vars]
        use_container_for_build=true
        awx_official=true

        postgres_data_dir=/opt/pgdocker
        host_port=80

        pg_username=awx
        pg_password=
        pg_database=awx
        pg_port=5432

        awx_secret_key=

  - name: Add cron job
    cron:
      name: Re-deploy AWX at reboot
      special_time: reboot
      state: present
      job: "ansible-playbook -i /root/awx/installer/inventory /root/awx/installer/install.yml"

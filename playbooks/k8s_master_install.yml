---
- hosts: k8smaster
  vars:
    admin_user: admin
    admin_group: admin
    admin_home: /home/admin

  tasks:

  - name: Add k8s key
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

  - name: Add k8s deb source
    shell: echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list

  - name: Install kubelet kubeadm kubectl kubernetes-cni
    apt:
      name: "{{ item }}"
      state: latest
    with_items:
      - 'kubelet'
      - 'kubeadm'
      - 'kubectl'
      - 'kubernetes-cni'

  - name: Add docker repo
    apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable'
      # deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable

  - name: Add docker repository key
    shell: wget -q -O - https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

  - name: Install docker-ce
    apt: update_cache=yes name=docker-ce state=latest

  - name: Enable Docker service
    shell: systemctl enable docker.service

  - name: Turn off swap
    shell: swapoff -a

  - name: Disable swap in cron
    cron:
      name: "Disable swap"
      special_time: reboot
      job: "swapoff -a"

  - name: Bugfix for pre-kubeadm init
    shell: kubeadm reset

  - name: kubeadm init
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16 | tee kubeadm-init.log

  - name: Show kubeadm join
    shell: grep 'kubeadm join --token' kubeadm-init.log
    register: token

  - debug:
      var: token
      verbosity: 0

  - name: Create admin user
    user:
      name: admin
      createhome: yes
      shell: /bin/bash
      comment: kubernetes cluster admin
      state: present

  - name: Configure kubeconfig for admin
    shell: |
      mv {{ admin_home }}/.kube {{ admin_home }}/.kube.bak
      mkdir -p {{ admin_home }}/.kube
      cp /etc/kubernetes/admin.conf {{ admin_home }}/.kube/config
      chown -R {{ admin_user }}:{{ admin_group }} {{ admin_home }}

  - name: Configure kubeconfig for root
    shell: |
      mv /root/.kube /root/.kube.bak
      mkdir -p /root/.kube
      cp /etc/kubernetes/admin.conf /root/.kube/config

  - name: Taint master node for pod provisioning
    shell: kubectl taint nodes --all node-role.kubernetes.io/master-

  - name: Create flannel pod network
    # --pod-network-cidr=10.244.0.0/16
    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.0/Documentation/kube-flannel.yml
    become: yes
    become_user: admin
    become_method:  su

#  - name: Create canal rbac
    # --pod-network-cidr=10.244.0.0/16
#    shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/canal/master/k8s-install/1.7/rbac.yaml
#    become: yes
#    become_user: admin
#    become_method:  su
#
#  - name: Create canal pod network
#    shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/canal/master/k8s-install/1.7/canal.yaml
#    become: yes
#    become_user: admin
#    become_method:  su

  - name: Create dashboard
    shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
    become: yes
    become_user: admin
    become_method:  su

  - name: kubectl get nodes
    shell: kubectl get nodes
    become: yes
    become_user: admin
    become_method:  su
    register: token

  - debug:
      var: token
      verbosity: 0

  - name: kubectl get pods
    shell: kubectl get pods --namespace=kube-system
    become: yes
    become_user: admin
    become_method:  su
    register: token

  - debug:
      var: token
      verbosity: 0

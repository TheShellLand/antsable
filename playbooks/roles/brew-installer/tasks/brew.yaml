---
- block:
    - name: "{{ BREW }} tap {{ BREW_TAP }}"
      shell: "{{ BREW }} tap {{ BREW_TAP }}"
      register: shell
      changed_when: shell.rc != 0

    - debug: var=shell
  when: BREW_TAP

- block:
    - name: "{{ BREW }} install --cask {{ package }}"
      shell: "{{ BREW }} install --cask {{ package }}"
      register: shell
      changed_when:
        - "'installed' not in shell.stderr"
        - '"successfully installed" not in shell.stdout'
        - '"there is already an App" not in shell.stderr'
      failed_when:
        - '"successfully installed" not in shell.stdout'
        - '"is already installed" not in shell.stderr'
        - '"there is already an App" not in shell.stderr'

    - name: "{{ BREW }} upgrade --cask {{ package }}"
      shell: "{{ BREW }} upgrade --cask {{ package }}"
      register: shell
      failed_when: shell.stdout
      changed_when: shell.stdout
      when: "'installed' in shell.stderr"

  rescue:
    - name: "{{ BREW }} install {{ package }}"
      shell: "{{ BREW }} install {{ package }}"
      register: shell
      changed_when: "'installed' not in shell.stderr"

    - name: "{{ BREW }} upgrade {{ package }}"
      shell: "{{ BREW }} upgrade {{ package }}"
      register: shell
      failed_when: shell.stdout
      changed_when: shell.stdout
      when: "'installed' in shell.stderr"

    - name: "{{ BREW }} link --overwrite {{ package }}"
      shell: "{{ BREW }} link --overwrite {{ package }}"
      register: shell
      changed_when:
        - "'Linking' not in shell.stdout"
        - "'installed' not in shell.stderr"
        - '"Already linked" not in shell.stderr'
  when: not NO_QUARANTINE

- block:
    - name: "{{ BREW }} install --cask --no-quarantine {{ package }}"
      shell: "{{ BREW }} install --cask --no-quarantine {{ package }}"
      register: shell
      changed_when: "'installed' not in shell.stderr"

    - name: "{{ BREW }} upgrade --cask --no-quarantine {{ package }}"
      shell: "{{ BREW }} upgrade --cask --no-quarantine {{ package }}"
      register: shell
      failed_when: shell.stdout
      changed_when: shell.stdout
      when: "'installed' in shell.stderr"
  when: NO_QUARANTINE
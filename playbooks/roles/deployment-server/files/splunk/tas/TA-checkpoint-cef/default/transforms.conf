###### global  ######
[checkpoint_vendor_info_lookup]
filename = checkpoint_vendor_info.csv

[checkpoint_action_lookup]
filename = checkpoint_actions.csv

[checkpoint_cef_actions]
filename = checkpoint_cef_actions.csv

[checkpoint_audit_action_lookup]
filename = checkpoint_audit_actions.csv

[te_action_lookup]
filename = checkpoint_actions_te.csv

[ids_severity_lookup]
filename = checkpoint_ids_severity.csv



#CEF Transforms
#Source: CEF app

[cefHeaders]
REGEX = CEF:(?<cef_cefVersion>\d+)\|(?<cef_vendor>[^|]*)\|(?<cef_product>[^|]*)\|(?<cef_version>[^|]*)\|(?<cef_signature>[^|]*)\|(?<cef_name>[^|]*)\|(?<cef_severity>[^|]*)

[cefKeys]
REGEX = (?:_+)?(?<_KEY_1>[\w.:\[\]]+)=(?<_VAL_1>.*?(?=(?:\s[\w.:\[\]]+=|$)))
REPEAT_MATCH = True
CLEAN_KEYS = 1

# This is a _V_E_R_Y_ CPU expensive regex. Use with caution
[cefLabelAfterKey]
REGEX = \b(?P<keyName>\w+\d)=(?P<_VAL_1>.*?(?=(?:\s[\w.:\[\]]+=|$)))(?=.*?\b(?P=keyName)Label=(?P<_KEY_1>.*?(?=(?:\s[\w.:\[\]]+=|$))))
REPEAT_MATCH = true
CLEAN_KEYS = 1

# This is a _V_E_R_Y_ CPU expensive regex. Use with caution
[cefLabelBeforeKey]
REGEX = \b(?P<keyName>\w+\d)Label=(?P<_KEY_1>.*?(?=(?:\s[\w.:\[\]]+=)))(?=.*\b(?P=keyName)=(?P<_VAL_1>.*?(?=(?:\s[\w.:\[\]]+=|$))))
REPEAT_MATCH = true
CLEAN_KEYS = 1

# Check Point Product Sourctypes
# Source: Splunk OPSEC TA

#need to test
[checkpoint_sourcetype_threat_emulation]
REGEX = product\=Threat\sEmulation
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:threat_emulation

#need to test
[checkpoint_sourcetype_anti_malware]
REGEX = product\=Anti\sMalware
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:anti_malware

#need to test
[checkpoint_sourcetype_anti_virus]
REGEX = product\=New\sAnti\sVirus
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:anti_virus

#tested
[checkpoint_sourcetype_smartdefense]
REGEX = product\=SmartDefense
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:smartdefense

#tested
[checkpoint_sourcetype_smartconsole]
REGEX = product\=SmartConsole
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:audit

#tested
[checkpoint_sourcetype_vpn]
REGEX = fw_subproduct\=VPN-1
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::checkpoint:cef:vpn

#updated to CEF format
[action_as_checkpoint_action]
REGEX = rule_action\=([^\s]+)
FORMAT = vendor_action::$1

#Hnadle custom strings in CEF ouptut
#tested
[cef_custom_string_extraction]
REGEX = cs[0-9]Label=(.*?)\s+cs[0-9]=(.*?)(?:(?=\s+[A-Za-z0-9]+=)|$)
FORMAT = $1::$2

#Handle flex numbers in CEF output
#tested
[cef_flex_number_extraction]
REGEX = flexNumber[0-9]Label=(.*?)\s+flexNumber[0-9]=(.*?)(?:(?=\s+[A-Za-z0-9]+=)|$)
FORMAT = $1::$2

#Handle flex string in CEF output
#tested
[cef_flex_string_extraction]
REGEX = flexString[0-9]Label=(.*?)\s+flexString[0-9]=(.*?)(?:(?=\s+[A-Za-z0-9]+=)|$)
FORMAT = $1::$2

#User (for events where the username is in the format "User Name (username)"
#Extract username in paranthesis
[extract_duser]
REGEX = [A-Za-z\s]+\(([^)]+)\)
SOURCE_KEY = duser
FORMAT = duser_extracted::$1

#user name (default case - for handling single word usernames)
[extract_duser_name]
REGEX = duser\=([^|\s]+)
FORMAT = duser_name::$1

###### checkpoint ######
#
###### actions #####
[vendor_action_for_checkpoint]
REGEX  = action\=([^|]+)
FORMAT = vendor_action::$1


### This section copied from OPSEC TA, may be relevant later ###

#[action_as_threat_emulation_action]
#REGEX = action\=([^|]+)
#FORMAT = te_action::$1

#[auto_kv_for_opsec]
#REGEX = ([^|=]*)\b:?=([^|]*)
#FORMAT = $1::$2

#[policy_id_tag_for_opsec]
#REGEX  = __policy_id_tag\=([^|]+)
#FORMAT = policy_id_tag::$1
#
#[inbound_interface_for_opsec]
#REGEX  = i\/f_dir\=inbound.*i\/f_name=([^|]+)
#FORMAT = inbound_interface::$1
#
#[outbound_interface_for_opsec]
#REGEX  = i\/f_dir\=outbound.*i\/f_name=([^|]+)
#FORMAT = outbound_interface::$1
#
#[db_tag_for_opsec]
#SOURCE_KEY = policy_id_tag
#REGEX      = db_tag\=([^;]+)
#FORMAT     = db_tag::$1
#
#[mgmt_for_opsec]
#SOURCE_KEY = policy_id_tag
#REGEX      = mgmt\=([^;]+)
#FORMAT     = mgmt::$1
#
#[policy_date_for_opsec]
#SOURCE_KEY = policy_id_tag
#REGEX      = date\=([^;]+)
#FORMAT     = policy_date::$1
#
#[policy_name_for_opsec]
#SOURCE_KEY = policy_id_tag
#REGEX      = policy_name\=([^]]+)
#FORMAT     = policy_name::$1
#
#[opsec_vendor_action_field]
#REGEX  = \baction\s*=\s*"([^"|]*)"|\baction\s*=\s*([^|]*)\s*
#FORMAT = opsec_vendor_action::$1 opsec_vendor_action::$2
#
#[opsec_product_field]
#REGEX  = \bproduct\s*=\s*"([^"|\[]*)"|\bproduct\s*=\s*([^|\[]*)\s*
#FORMAT = opsec_product::$1 opsec_product::$2
#
#[opsec_product]
#REGEX  = \bproduct\s*=\s*"([^"|\[]*)"|\bproduct\s*=\s*([^|\[]*)\s*
#FORMAT = product::$1 product::$2
#
#[opsec_reason]
#REGEX = \|reason(?:\:?)=(?<opsec_reason>[^|]*)
#
#[opsec_vender_operation_field]
#REGEX  = \bOperation\s*=\s*"([^"|]*)"|\bOperation\s*=\s*([^|]*)\s*
#FORMAT = opsec_vendor_operation::$1 opsec_vendor_operation::$2
#
#[dest_field_for_antimalware]
#REGEX = src=(?<malware_dest_ip>([0-9]{1,3}\.){3}[0-9]{1,3})
#

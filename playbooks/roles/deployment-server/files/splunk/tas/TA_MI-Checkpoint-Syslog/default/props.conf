[checkpoint:syslog:cef]
LINE_BREAKER = ([\r\n]+)
TRUNCATE = 15000
TIME_PREFIX = \srt\=
TIME_FORMAT = %s%3N
MAX_TIMESTAMP_LOOKAHEAD = 20
KV_MODE = none
SHOULD_LINEMERGE = false
NO_BINARY_CHECK = 1

# rewrite sourcetypes for the Checkpoint CEF data
TRANSFORMS-force_sourcetype_firewall = sourcetype_for_checkpoint_syslog_cef_firewall
TRANSFORMS-force_sourcetype_smartdefense = sourcetype_for_checkpoint_syslog_cef_smartdefense
TRANSFORMS-force_sourcetype_connectra = sourcetype_for_checkpoint_syslog_cef_connectra

[checkpoint:syslog:cef:firewall]
# disable auto KV
KV_MODE = none

# CEF extractions for Checkpoint events
REPORT-checkpoint_cefHeaders = checkpoint_cefHeaders
REPORT-checkpoint_cefKeys = checkpoint_cefKeys

# CIM field mappings
FIELDALIAS-app = service_id as app
FIELDALIAS-dest_for_checkpoint = dst as dest, dst as dest_ip
FIELDALIAS-src_for_checkpoint = src as src_ip
FIELDALIAS-direction_for_checkpoint = deviceDirection as direction
FIELDALIAS-dvc_ip_for_checkpoint       = origin as dvc_ip
FIELDALIAS-dest_port_for_checkpoint = dpt AS dest_port
FIELDALIAS-src_port_for_checkpoint = spt AS src_port
FIELDALIAS-icmp_code_for_checkpoint = icmp AS icmp_code
FIELDALIAS-vendor_action = act as vendor_action
FIELDALIAS-vendor = cef_vendor AS vendor
FIELDALIAS-product = cef_product AS product
FIELDALIAS-src_zone = inzone AS src_zone
FIELDALIAS-dest_zone = outzone AS dest_zone
FIELDALIAS-rule_id = rule AS rule_id

# Custom Evals
EVAL-rule = if((cs2Label = "Rule Name"), cs2, null())
EVAL-vendor_product = cef_vendor." ".cef_product
EVAL-icmp_type = if(cn2Label=="ICMP Type",cn2,null)

# for NAT traffic
EVAL-dest_translated_ip=nullif(destinationTranslatedAddress,"0.0.0.0")
EVAL-dest_translated_port=nullif(destinationTranslatedPort, 0)
EVAL-src_translated_ip=nullif(sourceTranslatedAddress,"0.0.0.0")
EVAL-src_translated_port=nullif(sourceTranslatedPort, 0)

#Extract dvc name from originsicname or requestContext
EXTRACT-dvc=(requestContext|originsicname)=CN\\=(?P<dvc>[^,]+)

#Lookups
LOOKUP-action_for_checkpoint_syslog = checkpoint_syslog_cef_action_lookup vendor_action OUTPUT action
LOOKUP-transport_for_checkpoint_syslog = checkpoint_syslog_cef_protocol_lookup protocol_number AS proto OUTPUT transport

[checkpoint:syslog:cef:smartdefense]
# disable auto KV
KV_MODE = none

# CEF extractions for Checkpoint events
REPORT-checkpoint_cefHeaders = checkpoint_cefHeaders
REPORT-checkpoint_cefKeys = checkpoint_cefKeys

# CIM field mappings
FIELDALIAS-category = cef_signature AS category
FIELDALIAS-dest_for_checkpoint = dst as dest, dst as dest_ip
FIELDALIAS-dest_port_for_checkpoint = dpt AS dest_port
FIELDALIAS-src_for_checkpoint = src as src_ip
FIELDALIAS-src_port_for_checkpoint = spt AS src_port
FIELDALIAS-direction_for_checkpoint = deviceDirection as direction
FIELDALIAS-signature_for_checkpoint = cef_name AS signature
FIELDALIAS-vendor_action = act as vendor_action
FIELDALIAS-vendor = cef_vendor AS vendor
FIELDALIAS-product = cef_product AS product
FIELDALIAS-src_zone = inzone AS src_zone
FIELDALIAS-dest_zone = outzone AS dest_zone
FIELDALIAS-dvc_ip = origin AS dvc_ip
FIELDALIAS-rule_id = rule AS rule_id
FIELDALIAS-icmp_code_for_checkpoint = icmp AS icmp_code

#Custom Evals
EVAL-vendor_product = cef_vendor." ".cef_product
EVAL-rule = if((cs2Label = "Rule Name"), cs2, null())
EVAL-icmp_type = if(cn2Label=="ICMP Type",cn2,null)
EVAL-severity = case(cp_severity="Very-High", "critical", cp_severity="High", "high", cp_severity="Medium", "medium", cp_severity="Low", "low")
EVAL-ids_type = "network"

# for NAT traffic
EVAL-dest_translated_ip=nullif(destinationTranslatedAddress,"0.0.0.0")
EVAL-dest_translated_port=nullif(destinationTranslatedPort, 0)
EVAL-src_translated_ip=nullif(sourceTranslatedAddress,"0.0.0.0")
EVAL-src_translated_port=nullif(sourceTranslatedPort, 0)

#Extract dvc name from originsicname or requestContext
EXTRACT-dvc=(requestContext|originsicname)=CN\\=(?P<dvc>[^,]+)

#Lookups
LOOKUP-action_for_checkpoint_syslog = checkpoint_syslog_cef_action_lookup vendor_action OUTPUT action
LOOKUP-transport_for_checkpoint_syslog = checkpoint_syslog_cef_protocol_lookup protocol_number AS proto OUTPUT transport

[checkpoint:syslog:cef:connectra]
# disable auto KV
KV_MODE = none

# CEF extractions for Checkpoint events
REPORT-checkpoint_cefHeaders = checkpoint_cefHeaders
REPORT-checkpoint_cefKeys = checkpoint_cefKeys

# CIM field mappings
FIELDALIAS-vendor_action = act as vendor_action
FIELDALIAS-src_for_checkpoint = src as src_ip
FIELDALIAS-direction_for_checkpoint = deviceDirection as direction
FIELDALIAS-dvc_for_checkpoint = origin as dvc_ip
FIELDALIAS-dest_for_checkpoint = dst as dest, dst as dest_ip
FIELDALIAS-dest_port_for_checkpoint = dpt AS dest_port
FIELDALIAS-src_port_for_checkpoint = spt AS src_port
FIELDALIAS-vendor = cef_vendor AS vendor
FIELDALIAS-product = cef_product AS product

#Custom Evals
EVAL-vendor_product = cef_vendor." ".cef_product
EVAL-user_group = if((cs3Label = "User Group"), split(cs3,", "), null())
EVAL-action=case(act="Accept", "added", act="Reject", "blocked", act="Log In", "success", act="Failed Log In", "failure")

#Extract dvc name from originsicname or requestContext
EXTRACT-dvc=(requestContext|originsicname)=CN\\=(?P<dvc>[^,]+)

#Lookups
LOOKUP-transport_for_checkpoint_syslog = checkpoint_syslog_cef_protocol_lookup protocol_number AS proto OUTPUT transport

#EID from duser field
REPORT-user_for_checkpoint_cef_connectra = duser_as_user_for_checkpoint_cef_connectra


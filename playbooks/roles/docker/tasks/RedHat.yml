---
- include_role:
    name: pip-installer
    apply:
      become: "{{ 'yes' if become_user is defined else 'no'}}"
      become_user: "{{become_user if become_user is defined}}"
  vars:
    pip_package: "{{item}}"
    pip_user: yes
  loop:
    - requests
    - docker

- block:
    - yum:
        name: "{{item}}"
        state: latest
      become: yes
      changed_when: false
      loop:
        - yum-utils

    - uri:
        url: https://download.docker.com/linux/rhel/docker-ce.repo
        timeout: 1

    - name: https://download.docker.com/linux/rhel/docker-ce.repo
      yum_repository:
        name: docker.com
        description: Official docker repo
        baseurl: https://download.docker.com/linux/rhel/docker-ce.repo
        timeout: 5
      become: yes
      changed_when: false

    # yum install docker-ce docker-ce-cli containerd.io
    - name: install docker
      yum:
        name: "{{item}}"
        state: latest
      become: yes
      register: yum
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      failed_when:
        - '"No package matching" not in yum.msg'
  #        - '"Public key for" not in yum.msg'

  rescue:

    - name: install docker
      yum:
        name: "{{item}}"
        state: latest
        update_cache: yes
      become: yes
      loop:
        - docker-acl-plugin
        - docker-engine
        - docker*

- block:
    - service:
        name: docker
        enabled: yes
        state: stopped
      become: yes
      changed_when: false

    - name: move docker home
      shell: |
        if [ ! -d {{ DOCKER_HOME }}/docker ]; then 
          mv -v /var/lib/docker {{ DOCKER_HOME }}
          ln -s {{ DOCKER_HOME }} /var/lib/docker
        fi
      become: yes
      changed_when: false

  when: DOCKER_HOME

- name: add current user to docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes
  become: yes


- name: add user to docker group
  user:
    name: "{{ become_user }}"
    groups: docker
    append: yes
  become: yes
  when: become_user

- name: start docker
  service:
    name: docker
    enabled: yes
    state: started
  become: yes
  changed_when: false

- name: test docker
  shell: docker ps
  register: shell
  become: yes
  changed_when: shell.rc != 0
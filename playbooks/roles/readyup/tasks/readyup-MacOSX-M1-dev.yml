---
- set_fact:
    BREW: brew
    BREW_M1: "arch -x86_64 brew"

- name: brew
  shell: |
    if ! which brew >/dev/null; then
      arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
  register: brew
  changed_when: "brew.rc != 0"
  ignore_errors: yes

- name: install xcode
  shell: xcode-select --install
  register: xcode
  changed_when: "'command line tools are already installed' is not in xcode.stdout"
  failed_when: xcode.rc == 1
  ignore_errors: yes

#- name: fing
#  shell: |
#    folder="fing"
#    pkg=Fing-5.5.2-osX.pkg
#    url=https://www.fing.com/images/uploads/general/CLI_macOSX_5.5.2.zip
#
#    curl -o /tmp/readyup/fing.zip "$url"
#    cd /tmp/readyup
#    unzip -o fing.zip
#    installer -pkg "$pkg" -target /
#  become: yes

#- name: vagrant (brew)
#  shell: |
#    {{ BREW_M1 }} install --cask vagrant

#- name: virtualbox
#  shell: |
#    {{ BREW_M1 }} install --cask virtualbox

#- name: vmware-fusion
#  shell: |
#    {{ BREW_M1 }} install --cask vmware-fusion

#- name: parallels
#  shell: |
#    {{ BREW_M1 }} install --cask parallels

- name: wget
  shell: |
    {{ BREW_M1 }} install wget || {{ BREW_M1 }} upgrade wget

- name: fing
  shell: |
    {{ BREW_M1 }} install fing || {{ BREW_M1 }} upgrade fing

- name: nmap
  shell: |
    {{ BREW_M1 }} install nmap || {{ BREW_M1 }} upgrade nmap

# mount is not supported on MacOS when installed via Homebrew
#- name: rclone
#  shell: |
#    {{ BREW_M1 }} install rclone || {{ BREW_M1 }} upgrade rclone

- name: rclone
  block:
    - name: rclone
      set_fact:
        rclone_url: https://downloads.rclone.org/v1.54.0/rclone-v1.54.0-osx-amd64.zip
        rclone_ver: rclone-v1.54.0-osx-amd64
    - name: rclone download
      get_url:
        url: '{{rclone_url}}'
        dest: '{{install}}/rclone.zip'
        validate_certs: false
    - name: rclone unzip
      unarchive:
        src: '{{install}}/rclone.zip'
        dest: '{{install}}'
    - name: rclone install
      copy:
        src: '{{install}}/{{rclone_ver}}/rclone'
        dest: /usr/local/bin/rclone
        mode: '0755'

# this one is too old
#- name: osxfuse
#  shell: |
#    {{ BREW_M1 }} install --cask osxfuse || {{ BREW_M1 }} upgrade --cask osxfuse

- name: veracrypt
  shell: |
    {{ BREW_M1 }} install --cask veracrypt || {{ BREW_M1 }} upgrade --cask veracrypt

- name: tmux
  shell: |
    {{ BREW_M1 }} install tmux || {{ BREW_M1 }} upgrade tmux

#- name: pass
#  shell: |
#    {{ BREW_M1 }} install pass || {{ BREW_M1 }} upgrade pass

- name: pycharm-ce
  shell: |
    {{ BREW_M1 }} install --cask --force pycharm-ce || {{ BREW_M1 }} upgrade --cask --force pycharm-ce

#- name: wireshark
#  block:
#    - name: wireshark install
#      shell: |
#        {{ BREW_M1 }} install --cask wireshark
#      register: wireshark
#      failed_when: "'The install was successful' not in wireshark.stdout"
#      changed_when: "'The install was successful' not in wireshark.stdout"
#      ignore_errors: yes
#  rescue:
#    - name: wireshark upgrade
#      shell: |
#        {{ BREW_M1 }} upgrade wireshark
#      register: wireshark
#      failed_when: "'The upgrade was successful' not in wireshark.stdout"
#      changed_when: "'The upgrade was successful' not in wireshark.stdout"
#      ignore_errors: yes

- name: wireshark-chmodbpf
  block:
    - name: wireshark install
      shell: |
        {{ BREW_M1 }} install --cask wireshark-chmodbpf
      register: wireshark
      ignore_errors: yes
  rescue:
    - name: wireshark upgrade
      shell: |
        {{ BREW_M1 }} upgrade wireshark-chmodbpf
      register: wireshark
      ignore_errors: yes

- name: hashicorp
  block:
    - name: hashicorp
      set_fact:
        hashicorp_url: https://releases.hashicorp.com/vault/1.6.2/vault_1.6.2_darwin_amd64.zip
    - name: hashicorp download
      get_url:
        url: '{{hashicorp_url}}'
        dest: '{{install}}/hashicorp.zip'
        validate_certs: false
    - name: hashicorp unzip
      unarchive:
        src: '{{install}}/hashicorp.zip'
        dest: '{{install}}'
    - name: hashicorp install
      copy:
        src: '{{install}}/vault'
        dest: /usr/local/bin/vault
        mode: '0755'
      become: yes

- name: chrome m1
  shell: |
    url=https://dl.google.com/chrome/mac/universal/stable/GGRO/googlechrome.dmg
    # https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg

    folder="Google Chrome"
    app="Google Chrome.app"

    hdiutil attach -nobrowse "$url"
    volume="/Volumes/$folder"
    cp -R "$volume/$app" /Applications/
    hdiutil detach "$volume"

- name: gpg
  shell: |
    url=https://releases.gpgtools.org/GPG_Suite-2020.2.dmg

    folder="GPG Suite"
    pkg=Install.pkg

    hdiutil attach -nobrowse "$url"
    volume="/Volumes/$folder"
    installer -pkg "$volume/$pkg" -target /
    hdiutil detach "$volume"
  become: yes

- name: vagrant
  shell: |
    url=https://releases.hashicorp.com/vagrant/2.2.14/vagrant_2.2.14_x86_64.dmg

    folder="Vagrant"
    pkg=vagrant.pkg

    hdiutil attach -nobrowse "$url"
    volume="/Volumes/$folder"
    installer -pkg "$volume/$pkg" -target /
    hdiutil detach "$volume"
  become: yes

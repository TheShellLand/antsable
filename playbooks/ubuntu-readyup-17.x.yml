---
- hosts: all
  tasks:

  - name: /tmp/apps
    file: path=/tmp/apps state=directory

  - name: chdir
    shell: cd /tmp/apps

#  - name: Disable Ubuntu 16.04 console switch keys
#    shell: |
#      dumpkeys | grep -v Incr_Console | grep -v Decr_Console | grep -v Last_Console | loadkeys

  - name: Install Missing Packages
    shell: apt install -f -y

  - name: software-properties-common
    apt: update_cache=yes name=software-properties-common state=latest

  - name: X299 Realtek ALC1220 time drift fix
    # https://askubuntu.com/questions/982882/audio-glitches-every-few-seconds-with-vlc-and-the-alc1220-codec
    apt: update_cache=yes name=adjtimex state=latest
  - name: Fix timing drift
    shell: adjtimexconfig

  - name: git
    apt: update_cache=yes name=git state=latest

  - name: curl
    apt: update_cache=yes name=curl state=latest

  - name: unzip
    apt: update_cache=yes name=unzip state=latest

  - name: gnome-tweak-tool
    apt: update_cache=yes name=gnome-tweak-tool state=latest

  - name: chrome-gnome-shell
    apt: update_cache=yes name=chrome-gnome-shell state=latest

  - name: tmux
    apt: update_cache=yes name=tmux state=latest

  - name: CIFS
    apt: update_cache=yes name=cifs-utils state=latest

  - name: sshfs
    apt: update_cache=yes name=sshfs state=latest

  - name: gnome-backup duplicity
    apt: update_cache=yes name=duplicity state=latest

  - name: cryptsetup
    apt: update_cache=yes name=cryptsetup state=latest

  - name: pass
    apt: update_cache=yes name=pass state=latest

#  - name: Chrome
#    shell: |
#      apps=/tmp/apps
#      chrome=chrome.deb
#      if [ ! -f $apps/$chrome ]; then
#          wget -q -O $apps/$chrome 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
#          dpkg -i $apps/$chrome
#          #rm $apps/$chrome
#      else
#          dpkg -i $apps/$chrome
#      fi
#      apt install -f -y

#  - name: Chrome beta
#    shell: |
#      apps=/tmp/apps
#      chromeDev=chromebeta.deb
#      if [ ! -f $apps/$chromeBeta ]; then
#          wget -q -O $apps/$chromeBeta 'https://dl.google.com/linux/direct/google-chrome-beta_current_amd64.deb'
#          dpkg -i $apps/$chromeBeta
#          #rm $apps/$chromeBeta
#      else
#          dpkg -i $apps/$chromeBeta
#      fi
#      apt install -f -y

  - name: Chrome dev
    shell: |
      apps=/tmp/apps
      chromeDev=chromedev.deb
      if [ ! -f $apps/$chromeDev ]; then
          wget -q -O $apps/$chromeDev 'https://dl.google.com/linux/direct/google-chrome-unstable_current_amd64.deb'
          dpkg -i $apps/$chromeDev
          #rm $apps/$chromeDev
      else
          dpkg -i $apps/$chromeDev
      fi
      apt install -f -y

#  - name: Brave
#    shell: snap install brave
#    args:
#      executable: /bin/bash
#
#  - name: Brave beta
#    shell: |
#      curl https://s3-us-west-2.amazonaws.com/brave-apt-staging/keys.asc | sudo apt-key add -
#      echo "deb [arch=amd64] https://s3-us-west-2.amazonaws.com/brave-apt-staging `lsb_release -sc` main" | sudo tee /etc/apt/sources.list.d/brave-`lsb_release -sc`.list
#      sudo apt update
#      sudo apt install -y brave-beta
#    args:
#      executable: /bin/bash

  - name: Pycharm
    shell:
      cmd: |
        apps=/tmp/apps
        pycharm=pycharm.tgz
        if [ ! -d '/opt/pycharm' ]; then mkdir /opt/pycharm; fi
        if [ ! -f $apps/$pycharm ]; then
            wget -q -O $apps/$pycharm 'https://download-cf.jetbrains.com/python/pycharm-community-2018.3.2.tar.gz'
            tar zxf $apps/$pycharm -C /opt/pycharm
        else
            tar zxf $apps/$pycharm -C /opt
        fi

        prog="/opt/pycharm/pycharm-community-2018.3.2/bin/pycharm.sh"
        bin="/usr/local/bin/pycharm"

        if [ -L "$bin" ]; then
          rm "$bin"
        fi

        ln -s "$prog" "$bin"

        cat > /usr/share/applications/pycharm.desktop << EOF
        [Desktop Entry]
        Encoding=UTF-8
        Name=Pycharm IDE
        Comment=The Smarter Way to Code
        Exec=/bin/sh "/opt/pycharm/pycharm-community-2018.3.2/bin/pycharm.sh"
        Icon=/opt/pycharm/pycharm-community-2018.3.2/bin/pycharm.png
        Categories=Application;Development;Python;IDE
        Version=1.0
        Type=Application
        Terminal=0
        EOF
    args:
      executable: /bin/bash

  - name: python3-pip
    apt: update_cache=yes name=python3-pip state=latest

  - name: Visual Studio Code
    shell: |
      curl -s https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
      sh -c 'echo "deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
  - name: code-insiders
    apt: update_cache=yes name=code-insiders

  - name: Installing Macbuntu - ppa:noobslab/macbuntu
    apt_repository: repo='ppa:noobslab/macbuntu'

  - name: gnome-tweak-tool
    apt: update_cache=yes name=gnome-tweak-tool state=latest

  - name: system-monitor prerequisite
    apt:
      name: '{{ item }}'
      state: present
    with_items:
      - 'gir1.2-gtop-2.0'
      - 'gir1.2-networkmanager-1.0'
      - 'gir1.2-clutter-1.0'

  - name: Gnome Extensions
    shell: |
      apps=/tmp/apps
      wget -O $apps/extension-clock.zip https://extensions.gnome.org/download-extension/Move_Clock%40rmy.pobox.com.shell-extension.zip?version_tag=5241
      wget -O $apps/extension-taskbar.zip https://extensions.gnome.org/download-extension/TaskBar%40zpydr.shell-extension.zip?version_tag=7000
      wget -O $apps/no-title-bar.zip https://extensions.gnome.org/download-extension/no-title-bar%40franglais125.gmail.com.shell-extension.zip?version_tag=7334
      wget -O $apps/system-monitor.zip https://extensions.gnome.org/download-extension/system-monitor%40paradoxxx.zero.gmail.com.shell-extension.zip?version_tag=6808
      wget -O $apps/windows-list-up-top.zip https://extensions.gnome.org/download-extension/window-list-mod%40vagonpop.gmail.com.shell-extension.zip?version_tag=7435
      wget -O $apps/topIcons.zip https://extensions.gnome.org/download-extension/topIcons%40adel.gadllah%40gmail.com.shell-extension.zip?version_tag=7417
      wget -O $apps/dash-to-dock.zip https://extensions.gnome.org/download-extension/dash-to-dock%40micxgx.gmail.com.shell-extension.zip?version_tag=7315
      wget -O $apps/shell-extension.zip https://extensions.gnome.org/extension-data/user-theme%40gnome-shell-extensions.gcampax.github.com.v32.shell-extension.zip
      wget -O $apps/workspaces-to-dock.zip https://extensions.gnome.org/extension-data/workspaces-to-dock%40passingthru67.gmail.com.v44.shell-extension.zip
      wget -O $apps/hidetopbar.zip https://extensions.gnome.org/download-extension/hidetopbar%40mathieu.bidon.ca.shell-extension.zip?version_tag=7714

      mkdir -p /usr/share/gnome-shell/extensions

      unzip -o $apps/extension-clock.zip -d /usr/share/gnome-shell/extensions/Move_Clock@rmy.pobox.com
      unzip -o $apps/extension-taskbar.zip -d /usr/share/gnome-shell/extensions/TaskBar@zpydr
      unzip -o $apps/no-title-bar.zip -d /usr/share/gnome-shell/extensions/no-title-bar@franglais125.gmail.com
      unzip -o $apps/system-monitor.zip -d /usr/share/gnome-shell/extensions/system-monitor@paradoxxx.zero.gmail.com
      unzip -o $apps/windows-list-up-top.zip -d /usr/share/gnome-shell/extensions/window-list-mod@vagonpop.gmail.com
      unzip -o $apps/topIcons.zip -d /usr/share/gnome-shell/extensions/topIcons@adel.gadllah@gmail.com
      unzip -o $apps/dash-to-dock.zip -d /usr/share/gnome-shell/extensions/dash-to-dock@micxgx.gmail.com
      unzip -o $apps/shell-extension.zip -d /usr/share/gnome-shell/extensions/user-theme@gnome-shell-extensions.gcampax.github.com
      unzip -o $apps/workspaces-to-dock.zip -d /usr/share/gnome-shell/extensions/workspaces-to-dock@passingthru67.gmail.com
      unzip -o $apps/hidetopbar.zip -d /usr/share/gnome-shell/extensions/hidetopbar@mathieu.bidon.ca

      chmod -R +r /usr/share/gnome-shell/extensions
    args:
      executable: /bin/bash

  - name: Arrongin theme
    git:
      repo: https://github.com/paullinuxthemer/Arrongin-GTK.git
      dest: arrogin
      update: yes
  - name: install Arrongin
    shell: |
      cd arrogin
      cp -rv 'Arrongin-Buttons-Right=>3.30' /usr/share/themes/
    args:
      executable: /bin/bash

  - name: Telinkrin theme
    git:
      repo: https://github.com/paullinuxthemer/Telinkrin-GTK.git
      dest: telinkrin
      update: yes
  - name: install telinkrin
    shell: |
      cd telinkrin
      cp -rv 'Telinkrin-Buttons-Right=>3.30' /usr/share/themes/
    args:
      executable: /bin/bash

  - name: macbuntu-os-icons-v10
    apt:
      name: macbuntu-os-icons-v10
      state: latest

  - name: macbuntu-os-ithemes-v10
    apt: update_cache=yes name=macbuntu-os-ithemes-v10 state=latest

  - name: libreoffice-style-sifr
    apt: update_cache=yes name=libreoffice-style-sifr state=latest

  - name: Put buttons on left side
    shell:
      cmd: |
        cat > /tmp/apps/left <<EOF
        gsettings set org.gnome.desktop.wm.preferences button-layout "close,minimize,maximize:"
        EOF
    args:
      executable: /bin/bash

  - name: oranchelo-icon-theme repo
    apt_repository: repo='ppa:oranchelo/oranchelo-icon-theme'
  - name: oranchelo-icon-theme
    apt: update_cache=yes name=oranchelo-icon-theme state=latest

  - name: arc-icon-theme
    shell: |
      apps=/tmp/apps
      if [ ! -d "$apps/arc-icon-theme" ]; then mkdir "$apps/arc-icon-theme"; fi
      if [ ! -d $apps/arc-icon-theme/Arc ]; then
          git clone https://github.com/horst3180/arc-icon-theme.git "$apps/arc-icon-theme"
          cp -r $apps/arc-icon-theme/Arc /usr/share/icons
      else
          cp -r $apps/arc-icon-theme/Arc /usr/share/icons
      fi

  - name: capitaine-cursors
    shell: |
      apps=/tmp/apps
      file=capitaine-cursors.tgz
      if [ ! -d $apps/capitaine-cursors ]; then mkdir $apps/capitaine-cursors; fi
      if [ ! -f $apps/$file ]; then
          wget -q -O $apps/$file https://github.com/keeferrourke/capitaine-cursors/archive/r2.1.tar.gz
          tar zxf $apps/$file -C $apps/capitaine-cursors
          cp -r $apps/capitaine-cursors/capitaine-cursors-r2.1/dist /usr/share/icons/capitaine-cursors
      else
          tar zxf $apps/$file -C $apps/capitaine-cursors
          cp -r $apps/capitaine-cursors/capitaine-cursors-r2.1/dist /usr/share/icons/capitaine-cursors
      fi

  - name: mac fonts
    shell: |
      apps=/tmp/apps
      fonts=mac-fonts.zip
      if [ ! -f $apps/$fonts ]; then
          wget -q -O $apps/$fonts http://drive.noobslab.com/data/Mac/macfonts.zip
          unzip $apps/$fonts -d /usr/share/fonts
          #rm $apps/$fonts
      else
          unzip -o $apps/mac-fonts.zip -d /usr/share/fonts
      fi
      fc-cache -f -v

#  - name: Disable Mouse Acceleration for X server
#    file: >
#      path=/usr/share/X11/xorg.conf.d/
#      recurse=yes
#      state=directory
#  - name: Disable Mouse Acceleration for X server
#    shell:
#      cmd: |
#        cat > /usr/share/X11/xorg.conf.d/50-mouse-acceleration.conf <<EOF
#        Section "InputClass"
#            Identifier "My Mouse"
#            MatchIsPointer "yes"
#            Option "AccelerationProfile" "-1"
#            Option "AccelerationScheme" "none"
#            Option "AccelSpeed" "-1"
#        EndSection
#        EOF
#    args:
#      executable: /bin/bash

  - name: OpenVPN
    apt: update_cache=yes name=openvpn state=latest

  - name: Virt-Viewer
    apt: update_cache=yes name=virt-viewer state=latest

  - name: x11vnc
    apt: update_cache=yes name=x11vnc state=latest

  - name: x2go
    apt: update_cache=yes name=x2goclient state=latest

  - name: remmina
    apt: update_cache=yes name=remmina state=latest

  - name: PlayOnLinux
    shell: |
      apps=/tmp/apps
      pol=PlayOnLinux.deb
      if [ ! -f $apps/$pol ]; then
          wget -q -O $apps/$pol 'https://www.playonlinux.com/script_files/PlayOnLinux/4.2.12/PlayOnLinux_4.2.12.deb'
          dpkg -i $apps/$pol
      else
          dpkg -i $apps/$pol
      fi
      if [ -d usr ]; then
          rsync -rti usr /
      fi
      apt install -f -y
      dpkg --add-architecture i386
  - name: PlayOnLinux - wine
    apt: update_cache=yes name=wine-development state=present
  - name: PlayOnLinux - winbind
    apt: update_cache=yes name=winbind state=present
  - name: PlayOnLinux - update missing packages
    shell: apt install -f -y
  
  - name: Wine (staging)
    shell: |
      apps=/tmp/apps
      wine=$apps/wine
      mkdir -p $wine
      cd $wine
      wget -nc https://dl.winehq.org/wine-builds/winehq.key
      apt-key add winehq.key
      apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
      apt-get update
      apt-get install -y --install-recommends winehq-staging
    args:
      executable: /bin/bash

  - name: Lutris (gaming)
    shell: |
      echo "deb http://download.opensuse.org/repositories/home:/strycore/Debian_9.0/ ./" | sudo tee /etc/apt/sources.list.d/lutris.list
      wget -q http://download.opensuse.org/repositories/home:/strycore/Debian_9.0/Release.key -O- | sudo apt-key add -
      apt-get update
      apt-get install -y lutris

  - name: nodejs
    shell: curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
    args:
      executable: /bin/bash
  - name: nodejs
    apt: update_cache=yes name=nodejs state=latest

  - name: exfat
    apt: update_cache=yes name=exfat-utils state=latest

  - name: nmap
    apt: update_cache=yes name=nmap state=latest

  - name: wireshark
    apt: update_cache=yes name=wireshark state=latest

  - name: macchanger
    apt: update_cache=yes name=macchanger state=latest

  - name: lm-sensors
    apt: update_cache=yes name=lm-sensors state=latest

  - name: QTQR
    apt: update_cache=yes name=qtqr state=latest

  - name: VLC
    apt: update_cache=yes name=vlc state=latest

  - name: Virtualbox
    apt: update_cache=yes name=virtualbox state=latest
      # TODO: VirtualBox 5.1.26 does not install on Ubuntu 16.04
      # Unable to install dependencies even with yakkety contrib branch
      #    dpkg: dependency problems prevent configuration of virtualbox-5.1:
      #        virtualbox-5.1 depends on libqt5core5a (>= 5.6.0~beta); however:
      #        Version of libqt5core5a:amd64 on system is 5.5.1+dfsg-16ubuntu7.5.
      #        virtualbox-5.1 depends on libqt5widgets5 (>= 5.6.0~beta); however:
      #        Version of libqt5widgets5:amd64 on system is 5.5.1+dfsg-16ubuntu7.5.
      #        virtualbox-5.1 depends on libqt5x11extras5 (>= 5.6.0); however:
      #        Version of libqt5x11extras5:amd64 on system is 5.5.1-3build1.
      #
      #echo "deb http://download.virtualbox.org/virtualbox/debian yakkety contrib" >> /etc/apt/sources.list
      #wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
      #apt update
      #file=vbox.deb
      #if [ ! -f $apps/$file ]; then
      #	wget -q -O $apps/$file "http://download.virtualbox.org/virtualbox/5.1.26/virtualbox-5.1_5.1.26-117224~Ubuntu~xenial_amd64.deb"
      #    dpkg -i $apps/$file
      #else
      #    dpkg -i $apps/$file
      #fi
      #file=vbox-extpack
      #if [ ! -f $apps/$file ]; then
      #	wget -q -O $apps/$file "http://download.virtualbox.org/virtualbox/5.1.26/Oracle_VM_VirtualBox_Extension_Pack-5.1.26-117224.vbox-extpack"
      #	VBoxManage extpack install --replace $apps/$file
      #else
      #	VBoxManage extpack install --replace $apps/$file
      #fi

  - name: Emacs
    apt: update_cache=yes name=emacs state=latest

  - name: Vim
    apt: update_cache=yes name=vim state=latest

#  - name: Skype
#    shell: dpkg -s apt-transport-https > /dev/null || bash -c "sudo apt-get update; sudo apt-get install apt-transport-https -y"
#  - name: skype repo key
#    apt_key: url=https://repo.skype.com/data/SKYPE-GPG-KEY state=present
#  - name: skype repo
#    shell: echo "deb [arch=amd64] https://repo.skype.com/deb stable main" > /etc/apt/sources.list.d/skype-stable.list
#  - name: skypeforlinux
#    apt: update_cache=yes name=skypeforlinux state=latest

  - name: Discord
    shell: |
      apps=/tmp/apps
      file=discord.deb
      if [ ! -f $apps/$file ]; then
        wget -q -O $apps/$file https://dl.discordapp.net/apps/linux/0.0.5/discord-0.0.5.deb
        dpkg -i $apps/$file
      else
        dpkg -i $apps/$file
      fi

  - name: aircrack
    apt: update_cache=yes name=aircrack-ng state=latest

  - name: darktable
    apt_repository: repo='ppa:pmjdebruijn/darktable-release'
  - name: darktable
    apt: update_cache=yes name=darktable state=latest

  - name: gimp
    apt: update_cache=yes name=gimp state=latest

  - name: audacity
    apt: update_cache=yes name=audacity state=latest

  - name: Veracrypt
    apt_repository: repo='ppa:unit193/encryption'
  - name: Veracrypt
    apt: update_cache=yes name=veracrypt state=latest

  - name: kazam
    apt: update_cache=yes name=kazam state=latest

  - name: OBS-Studio Screen Recorder
    apt_repository: repo='ppa:obsproject/obs-studio'
  - name: obs-studio
    apt: update_cache=yes name=obs-studio state=latest

  - name: Peek screen recorder
    shell: |
      apps=/tmp/apps
      file=peek.deb
      if [ ! -f $apps/$file ]; then
        wget -q -O $apps/$file https://github.com/phw/peek/releases/download/v0.8.0/peek-0.8.0-Linux.deb
        apt install -y libsdl1.2debian ffmpeg
        dpkg -i $apps/$file
      else
        apt install -y libsdl1.2debian ffmpeg
        dpkg -i $apps/$file
      fi

  - name: green recorder
    apt_repository: repo='ppa:fossproject/ppa'
  - name: green recorder
    apt: update_cache=yes name=green-recorder state=latest

  - name: Sublime 3
    shell: |
      wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
      sudo apt-get install -y apt-transport-https
      echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
    args:
      executable: /bin/bash
  - name: Sublime 3
    apt: update_cache=yes name=sublime-text state=latest

  - name: Java JDK 8 for NetBeans IDE
    shell: |
      apps=/tmp/apps
      version="jdk1.8.0_162"
      file=jdk.tgz
      if [ ! -d '/opt/jdk' ]; then mkdir /opt/jdk; fi
      if [ ! -f $apps/$file ]; then
          wget -q -O $apps/$file -c --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.tar.gz"
          tar zxf $apps/$file -C /opt/jdk
      else
          tar zxf $apps/$file -C /opt/jdk
      fi
      if [ ! -f /usr/local/bin/javajdk ]; then
          ln -sf /opt/jdk/"$version"/bin/java /usr/local/bin/javajdk
      else
          rm /usr/local/bin/javajdk
          ln -sf /opt/jdk/"$version"/bin/java /usr/local/bin/javajdk
      fi
    args:
      executable: /bin/bash

  - name: NetBeans IDE state configuration
    shell:
      cmd: |
        apps=/tmp/apps
        cat > $apps/state.xml <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!--
            DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

            Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.

            Oracle and Java are registered trademarks of Oracle and/or its affiliates.
            Other names may be trademarks of their respective owners.

            The contents of this file are subject to the terms of either the GNU General Public
            License Version 2 only ("GPL") or the Common Development and Distribution
            License("CDDL") (collectively, the "License"). You may not use this file except in
            compliance with the License. You can obtain a copy of the License at
            http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the
            License for the specific language governing permissions and limitations under the
            License.  When distributing the software, include this License Header Notice in
            each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle
            designates this particular file as subject to the "Classpath" exception as provided
            by Oracle in the GPL Version 2 section of the License file that accompanied this code.
            If applicable, add the following below the License Header, with the fields enclosed
            by brackets [] replaced by your own identifying information:
            "Portions Copyrighted [year] [name of copyright owner]"

            Contributor(s):

            The Original Software is NetBeans. The Initial Developer of the Original Software
            is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All
            Rights Reserved.

            If you wish your version of this file to be governed by only the CDDL or only the
            GPL Version 2, indicate your decision by adding "[Contributor] elects to include
            this software in this distribution under the [CDDL or GPL Version 2] license." If
            you do not indicate a single choice of license, a recipient has the option to
            distribute your version of this file under either the CDDL, the GPL Version 2 or
            to extend the choice of license to its licensees as provided above. However, if you
            add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the
            option applies only if the new code is made subject to such option by the copyright
            holder.
        -->
        <state
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="state-file.xsd">
         <components>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-base" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location.windows">$N{install}/NetBeans 8.2</property>
            <property name="minimum.jdk.version">1.8.0</property>
            <property name="jdk.location">/opt/jdk/jdk1.8.0_162</property>
            <property name="installation.timestamp">1517359318685</property>
            <property name="start.menu.shortcut.location">all.users</property>
            <property name="installation.location.macosx">$N{install}/NetBeans/NetBeans 8.2.app</property>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
            <property name="desktop.shortcut.location">all.users</property>
            <property name="netbeans.summary.message.text">115 updates successfully installed.

        </property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-extide" version="8.2.0.0.201609300101">
           <properties>
            <property name="show-in-wizard">false</property>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-javase" version="8.2.0.0.201609300101">
           <properties>
            <property name="jre.allowed">false</property>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-javaee" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="linux" status="to-be-installed" uid="nb-javame" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-webcommon" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-php" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-cnd" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-groovy" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-ergonomics" version="8.2.0.0.201609300101">
           <properties>
            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-uninstalled" uid="glassfish-mod" version="4.1.1.0.1">
           <properties>
            <property name="jdk.location"/>
            <property name="installation.location">/usr/local/glassfish-4.1.1</property>
           </properties>
          </product>
          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-uninstalled" uid="tomcat" version="8.0.27.0.0">
           <properties>
            <property name="installation.location">$N{install}/apache-tomcat-8.0.27</property>
            <property name="installation.location.windows">$E{ProgramFiles}/Apache Software Foundation/Apache Tomcat 8.0.27</property>
           </properties>
          </product>
         </components>
        </state>
        EOF
    args:
      executable: /bin/bash

  - name: NetBeans IDE install
    shell: |
      apps=/tmp/apps
      state=$apps/state.xml
      file=netbeans.sh
      if [ ! -f $apps/$file ]; then
          wget -q -O $apps/$file 'http://download.netbeans.org/netbeans/8.2/final/bundles/netbeans-8.2-linux.sh'
          chmod +x $apps/$file
          $apps/$file --silent --state $state
      else
          chmod +x $apps/$file
          $apps/$file --silent --state $state
      fi
    args:
      executable: /bin/bash

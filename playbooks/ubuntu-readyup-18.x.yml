---
- hosts: all
  tasks:

  - name: /tmp/apps
    file: path=/tmp/apps state=directory

  - name: chdir
    shell: cd /tmp/apps

  - name: Update cache
    apt: update_cache=yes
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install Missing Packages
    shell: apt install -f -y
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: software-properties-common
    apt: update_cache=yes name=software-properties-common state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: sudo
    apt: update_cache=no name=sudo state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: git
    apt: update_cache=no name=git state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: curl
    apt: update_cache=no name=curl state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: unzip
    apt: update_cache=no name=unzip state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: rsync
    apt: update_cache=no name=rsync state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: gnome-tweak-tool
    apt: update_cache=no name=gnome-tweak-tool state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: chrome-gnome-shell
    apt: update_cache=no name=chrome-gnome-shell state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: tmux
    apt: update_cache=no name=tmux state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: CIFS
    apt: update_cache=no name=cifs-utils state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: sshfs
    apt: update_cache=no name=sshfs state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: gnome-backup duplicity
    apt: update_cache=no name=duplicity state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: cryptsetup
    apt: update_cache=no name=cryptsetup state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: pass
    apt: update_cache=no name=pass state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: Chrome
#    shell: |
#      apps=/tmp/apps
#      chrome=chrome.deb
#      if [ ! -f $apps/$chrome ]; then
#          wget -q -O $apps/$chrome 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
#          dpkg -i $apps/$chrome
#          #rm $apps/$chrome
#      else
#          dpkg -i $apps/$chrome
#      fi
#      apt install -f -y

#  - name: Chrome beta
#    shell: |
#      apps=/tmp/apps
#      chromeDev=chromebeta.deb
#      if [ ! -f $apps/$chromeBeta ]; then
#          wget -q -O $apps/$chromeBeta 'https://dl.google.com/linux/direct/google-chrome-beta_current_amd64.deb'
#          dpkg -i $apps/$chromeBeta
#          #rm $apps/$chromeBeta
#      else
#          dpkg -i $apps/$chromeBeta
#      fi
#      apt install -f -y

  - name: Chrome dev
    apt:
      deb: https://dl.google.com/linux/direct/google-chrome-unstable_current_amd64.deb
    ignore_errors: yes
  - name: Chrome dev
    shell: apt install -f -y
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: Brave
#    shell: snap install brave
#    args:
#      executable: /bin/bash
#
#  - name: Brave beta
#    shell: |
#      curl https://s3-us-west-2.amazonaws.com/brave-apt-staging/keys.asc | apt-key add -
#      echo "deb [arch=amd64] https://s3-us-west-2.amazonaws.com/brave-apt-staging `lsb_release -sc` main" | tee /etc/apt/sources.list.d/brave-`lsb_release -sc`.list
#      apt update
#      apt install -y brave-beta
#    args:
#      executable: /bin/bash

  - name: python3-pip
    apt: update_cache=no name=python3-pip state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: Disable Mouse Acceleration for X server
#    file: >
#      path=/usr/share/X11/xorg.conf.d/
#      recurse=yes
#      state=directory
#  - name: Disable Mouse Acceleration for X server
#    shell:
#      cmd: |
#        cat > /usr/share/X11/xorg.conf.d/50-mouse-acceleration.conf <<EOF
#        Section "InputClass"
#            Identifier "My Mouse"
#            MatchIsPointer "yes"
#            Option "AccelerationProfile" "-1"
#            Option "AccelerationScheme" "none"
#            Option "AccelSpeed" "-1"
#        EndSection
#        EOF
#    args:
#      executable: /bin/bash

  - name: OpenVPN
    apt: update_cache=no name=openvpn state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Virt-Viewer
    apt: update_cache=no name=virt-viewer state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: x11vnc
    apt: update_cache=no name=x11vnc state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: x2go
    apt: update_cache=no name=x2goclient state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: remmina
    apt: update_cache=no name=remmina state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: PlayOnLinux
    apt:
      deb: https://www.playonlinux.com/script_files/PlayOnLinux/4.2.12/PlayOnLinux_4.2.12.deb
    ignore_errors: yes
  - name: PlayOnLinux
    shell: |
      apt install -f -y
      dpkg --add-architecture i386
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: PlayOnLinux - wine
    apt: update_cache=yes name=wine-development state=present
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: PlayOnLinux - winbind
    apt: update_cache=no name=winbind state=present
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: PlayOnLinux - update missing packages
    shell: apt install -f -y
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Wine (staging)
    shell: |
      apps=/tmp/apps
      wine=$apps/wine
      mkdir -p $wine
      cd $wine
      wget -nc https://dl.winehq.org/wine-builds/winehq.key
      apt-key add winehq.key
      apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
      apt-get update
      apt-get install -y --install-recommends winehq-staging
    args:
      executable: /bin/bash
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Lutris (gaming)
    shell: |
      echo "deb http://download.opensuse.org/repositories/home:/strycore/Debian_9.0/ ./" | tee /etc/apt/sources.list.d/lutris.list
      wget -q http://download.opensuse.org/repositories/home:/strycore/Debian_9.0/Release.key -O- | apt-key add -
      apt-get update
      apt-get install -y lutris
      apt-get install -y -f
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: nodejs
    shell: curl -sL https://deb.nodesource.com/setup_9.x | bash -
    args:
      executable: /bin/bash
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: nodejs
    apt: update_cache=yes name=nodejs state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: exfat
    apt: update_cache=no name=exfat-utils state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: lm-sensors
    apt: update_cache=no name=lm-sensors state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: QTQR
    apt: update_cache=no name=qtqr state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: VLC
    apt: update_cache=no name=vlc state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Virtualbox
    apt: update_cache=no name=virtualbox state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install qemu-kvm
    apt: update_cache=no name=qemu-kvm state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install libvirt-bin
    apt: update_cache=no name=libvirt-bin state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install virtinst
    apt: update_cache=no name=virtinst state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install bridge-utils
    apt: update_cache=no name=bridge-utils state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Install cpu-checker
    apt: update_cache=no name=cpu-checker state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  # Ideally don't use root account for virt-manager
  - name: Install virt-manager
    apt: update_cache=no name=virt-manager state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Vagrant
    apt:
      deb: https://releases.hashicorp.com/vagrant/2.2.3/vagrant_2.2.3_x86_64.deb

  - name: Pycharm
    shell:
      cmd: |
        apps=/tmp/apps
        pycharm=pycharm.tgz
        if [ ! -d '/opt/pycharm' ]; then mkdir /opt/pycharm; fi
        if [ ! -f $apps/$pycharm ]; then
            wget -q -O $apps/$pycharm 'https://download-cf.jetbrains.com/python/pycharm-community-2019.1.1.tar.gz'
            tar zxf $apps/$pycharm -C /opt/pycharm
        else
            tar zxf $apps/$pycharm -C /opt
        fi

        prog="/opt/pycharm/pycharm-community-2019.1.1/bin/pycharm.sh"
        bin="/usr/local/bin/pycharm"

        if [ -L "$bin" ]; then
          rm "$bin"
        fi

        ln -s "$prog" "$bin"

        cat > /usr/share/applications/pycharm.desktop << EOF
        [Desktop Entry]
        Encoding=UTF-8
        Name=Pycharm IDE
        Comment=The Smarter Way to Code
        Exec=/bin/sh "/opt/pycharm/pycharm-community-2019.1.1/bin/pycharm.sh"
        Icon=/opt/pycharm/pycharm-community-2019.1.1/bin/pycharm.png
        Categories=Application;Development;Python;IDE
        Version=1.0
        Type=Application
        Terminal=0
        EOF
    args:
      executable: /bin/bash
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: Emacs
#    apt: update_cache=no name=emacs state=latest

  - name: Vim
    apt: update_cache=no name=vim state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Atom
    apt:
      deb: https://atom-installer.github.com/v1.38.2/atom-amd64.deb?s=1560782772&ext=.deb
    ignore_errors: yes

  - name: Visual Studio Code
    shell: |
      curl -s https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
      sh -c 'echo "deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: code-insiders
    apt: update_cache=yes name=code-insiders
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Sublime 3
    shell: |
      wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -
      apt-get install -y apt-transport-https
      echo "deb https://download.sublimetext.com/ apt/stable/" | tee /etc/apt/sources.list.d/sublime-text.list
    args:
      executable: /bin/bash
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: Sublime 3
    apt: update_cache=yes name=sublime-text state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: Skype
#    shell: dpkg -s apt-transport-https > /dev/null || bash -c "apt-get update; apt-get install apt-transport-https -y"
#  - name: skype repo key
#    apt_key: url=https://repo.skype.com/data/SKYPE-GPG-KEY state=present
#  - name: skype repo
#    shell: echo "deb [arch=amd64] https://repo.skype.com/deb stable main" > /etc/apt/sources.list.d/skype-stable.list
#  - name: skypeforlinux
#    apt: update_cache=yes name=skypeforlinux state=latest

  - name: Discord
    apt:
      deb: https://dl.discordapp.net/apps/linux/0.0.5/discord-0.0.5.deb
    ignore_errors: yes
  - name: Discord
    shell: apt install -f -y
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: nmap
    apt: update_cache=no name=nmap state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: wireshark
    apt: update_cache=no name=wireshark state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: macchanger
    apt: update_cache=no name=macchanger state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: aircrack
    apt: update_cache=yes name=aircrack-ng state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: darktable
    apt_repository: repo='ppa:pmjdebruijn/darktable-release'
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: darktable
    apt: update_cache=yes name=darktable state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: gimp
    apt: update_cache=no name=gimp state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: audacity
    apt: update_cache=no name=audacity state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Veracrypt
    apt_repository: repo='ppa:unit193/encryption'
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: Veracrypt
    apt: update_cache=yes name=veracrypt state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: kazam
    apt: update_cache=no name=kazam state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: OBS-Studio Screen Recorder
    apt_repository: repo='ppa:obsproject/obs-studio'
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: obs-studio
    apt: update_cache=yes name=obs-studio state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Peek screen recorder
    apt:
      deb: https://github.com/phw/peek/releases/download/v0.8.0/peek-0.8.0-Linux.deb
    ignore_errors: yes
  - name: green recorder - libsdl1.2debian
    apt: update_cache=yes name=libsdl1.2debian state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: green recorder - ffmpeg
    apt: update_cache=yes name=ffmpeg state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: green recorder ppa
    apt_repository: repo='ppa:fossproject/ppa'
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
  - name: green recorder
    apt: update_cache=yes name=green-recorder state=latest
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

    #  - name: X299 Realtek ALC1220 time drift fix
    #    # https://askubuntu.com/questions/982882/audio-glitches-every-few-seconds-with-vlc-and-the-alc1220-codec
    #    apt: update_cache=no name=adjtimex state=latest
    #  - name: Fix timing drift
    #    shell: adjtimexconfig

  - name: Java JDK 8 for NetBeans IDE
    shell: |
      apps=/tmp/apps
      version="jdk1.8.0_162"
      file=jdk.tgz
      if [ ! -d '/opt/jdk' ]; then mkdir /opt/jdk; fi
      if [ ! -f $apps/$file ]; then
          wget -q -O $apps/$file -c --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.tar.gz"
          tar zxf $apps/$file -C /opt/jdk
      else
          tar zxf $apps/$file -C /opt/jdk
      fi
      if [ ! -f /usr/local/bin/javajdk ]; then
          ln -sf /opt/jdk/"$version"/bin/java /usr/local/bin/javajdk
      else
          rm /usr/local/bin/javajdk
          ln -sf /opt/jdk/"$version"/bin/java /usr/local/bin/javajdk
      fi
    args:
      executable: /bin/bash
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

#  - name: NetBeans IDE state configuration
#    shell:
#      cmd: |
#        apps=/tmp/apps
#        cat > $apps/state.xml <<EOF
#        <?xml version="1.0" encoding="UTF-8"?>
#        <!--
#            DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
#            Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
#            Oracle and Java are registered trademarks of Oracle and/or its affiliates.
#            Other names may be trademarks of their respective owners.
#
#            The contents of this file are subject to the terms of either the GNU General Public
#            License Version 2 only ("GPL") or the Common Development and Distribution
#            License("CDDL") (collectively, the "License"). You may not use this file except in
#            compliance with the License. You can obtain a copy of the License at
#            http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the
#            License for the specific language governing permissions and limitations under the
#            License.  When distributing the software, include this License Header Notice in
#            each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle
#            designates this particular file as subject to the "Classpath" exception as provided
#            by Oracle in the GPL Version 2 section of the License file that accompanied this code.
#            If applicable, add the following below the License Header, with the fields enclosed
#            by brackets [] replaced by your own identifying information:
#            "Portions Copyrighted [year] [name of copyright owner]"
#
#            Contributor(s):
#
#            The Original Software is NetBeans. The Initial Developer of the Original Software
#            is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All
#            Rights Reserved.
#
#            If you wish your version of this file to be governed by only the CDDL or only the
#            GPL Version 2, indicate your decision by adding "[Contributor] elects to include
#            this software in this distribution under the [CDDL or GPL Version 2] license." If
#            you do not indicate a single choice of license, a recipient has the option to
#            distribute your version of this file under either the CDDL, the GPL Version 2 or
#            to extend the choice of license to its licensees as provided above. However, if you
#            add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the
#            option applies only if the new code is made subject to such option by the copyright
#            holder.
#        -->
#        <state
#         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="state-file.xsd">
#         <components>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-base" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location.windows">$N{install}/NetBeans 8.2</property>
#            <property name="minimum.jdk.version">1.8.0</property>
#            <property name="jdk.location">/opt/jdk/jdk1.8.0_162</property>
#            <property name="installation.timestamp">1517359318685</property>
#            <property name="start.menu.shortcut.location">all.users</property>
#            <property name="installation.location.macosx">$N{install}/NetBeans/NetBeans 8.2.app</property>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#            <property name="desktop.shortcut.location">all.users</property>
#            <property name="netbeans.summary.message.text">115 updates successfully installed.
#
#        </property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-extide" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="show-in-wizard">false</property>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-javase" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="jre.allowed">false</property>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-javaee" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="linux" status="to-be-installed" uid="nb-javame" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-webcommon" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-php" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-cnd" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-groovy" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-installed" uid="nb-ergonomics" version="8.2.0.0.201609300101">
#           <properties>
#            <property name="installation.location">/opt/netbeans/netbeans-8.2</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-uninstalled" uid="glassfish-mod" version="4.1.1.0.1">
#           <properties>
#            <property name="jdk.location"/>
#            <property name="installation.location">/usr/local/glassfish-4.1.1</property>
#           </properties>
#          </product>
#          <product platform="windows linux solaris-sparc solaris-x86 macosx-ppc macosx-x86" status="to-be-uninstalled" uid="tomcat" version="8.0.27.0.0">
#           <properties>
#            <property name="installation.location">$N{install}/apache-tomcat-8.0.27</property>
#            <property name="installation.location.windows">$E{ProgramFiles}/Apache Software Foundation/Apache Tomcat 8.0.27</property>
#           </properties>
#          </product>
#         </components>
#        </state>
#        EOF
#    args:
#      executable: /bin/bash
#
#  - name: NetBeans IDE install
#    shell: |
#      apps=/tmp/apps
#      state=$apps/state.xml
#      file=netbeans.sh
#      if [ ! -f $apps/$file ]; then
#          wget -q -O $apps/$file 'http://download.netbeans.org/netbeans/8.2/final/bundles/netbeans-8.2-linux.sh'
#          chmod +x $apps/$file
#          $apps/$file --silent --state $state
#      else
#          chmod +x $apps/$file
#          $apps/$file --silent --state $state
#      fi
#    args:
#      executable: /bin/bash

  - name: Remove useless packages from the cache
    apt:
      autoclean: yes
    retries: 99
    delay: 3
    register: result
    until: result is succeeded

  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes
    retries: 99
    delay: 3
    register: result
    until: result is succeeded
